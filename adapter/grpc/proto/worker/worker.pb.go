// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.6.1
// source: adapter/grpc/proto/worker/worker.proto

// 包名

package worker

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Algorithm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AlgorithmId   string         `protobuf:"bytes,2,opt,name=algorithm_id,json=algorithmId,proto3" json:"algorithm_id,omitempty"`
	AlgorithmName string         `protobuf:"bytes,3,opt,name=algorithm_name,json=algorithmName,proto3" json:"algorithm_name,omitempty"`
	AlgorithmType int64          `protobuf:"varint,4,opt,name=algorithm_type,json=algorithmType,proto3" json:"algorithm_type,omitempty"`
	Part          int64          `protobuf:"varint,5,opt,name=part,proto3" json:"part,omitempty"`
	Versions      []*AlgoVersion `protobuf:"bytes,6,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *Algorithm) Reset() {
	*x = Algorithm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm) ProtoMessage() {}

func (x *Algorithm) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm.ProtoReflect.Descriptor instead.
func (*Algorithm) Descriptor() ([]byte, []int) {
	return file_adapter_grpc_proto_worker_worker_proto_rawDescGZIP(), []int{0}
}

func (x *Algorithm) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Algorithm) GetAlgorithmId() string {
	if x != nil {
		return x.AlgorithmId
	}
	return ""
}

func (x *Algorithm) GetAlgorithmName() string {
	if x != nil {
		return x.AlgorithmName
	}
	return ""
}

func (x *Algorithm) GetAlgorithmType() int64 {
	if x != nil {
		return x.AlgorithmType
	}
	return 0
}

func (x *Algorithm) GetPart() int64 {
	if x != nil {
		return x.Part
	}
	return 0
}

func (x *Algorithm) GetVersions() []*AlgoVersion {
	if x != nil {
		return x.Versions
	}
	return nil
}

type AlgoVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	VersionId string `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	Version   string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Url       string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Schema    string `protobuf:"bytes,5,opt,name=schema,proto3" json:"schema,omitempty"`
	Upload    bool   `protobuf:"varint,6,opt,name=upload,proto3" json:"upload,omitempty"`
}

func (x *AlgoVersion) Reset() {
	*x = AlgoVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlgoVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlgoVersion) ProtoMessage() {}

func (x *AlgoVersion) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlgoVersion.ProtoReflect.Descriptor instead.
func (*AlgoVersion) Descriptor() ([]byte, []int) {
	return file_adapter_grpc_proto_worker_worker_proto_rawDescGZIP(), []int{1}
}

func (x *AlgoVersion) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlgoVersion) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *AlgoVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AlgoVersion) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AlgoVersion) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *AlgoVersion) GetUpload() bool {
	if x != nil {
		return x.Upload
	}
	return false
}

type StartTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskId            string     `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	WorkerId          string     `protobuf:"bytes,3,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	AlgorithmName     string     `protobuf:"bytes,4,opt,name=algorithm_name,json=algorithmName,proto3" json:"algorithm_name,omitempty"`
	AlgorithmVersion  string     `protobuf:"bytes,5,opt,name=algorithm_version,json=algorithmVersion,proto3" json:"algorithm_version,omitempty"`
	AlgorithmImageUrl string     `protobuf:"bytes,6,opt,name=algorithm_image_url,json=algorithmImageUrl,proto3" json:"algorithm_image_url,omitempty"`
	AlgorithmSchema   string     `protobuf:"bytes,7,opt,name=algorithm_schema,json=algorithmSchema,proto3" json:"algorithm_schema,omitempty"`
	Status            int64      `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	ExecutorState     int64      `protobuf:"varint,9,opt,name=executor_state,json=executorState,proto3" json:"executor_state,omitempty"`
	Desc              string     `protobuf:"bytes,10,opt,name=desc,proto3" json:"desc,omitempty"`
	Input             string     `protobuf:"bytes,11,opt,name=input,proto3" json:"input,omitempty"`
	Output            string     `protobuf:"bytes,12,opt,name=output,proto3" json:"output,omitempty"`
	Ctime             int64      `protobuf:"varint,13,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Utime             int64      `protobuf:"varint,14,opt,name=utime,proto3" json:"utime,omitempty"`
	Algorithm         *Algorithm `protobuf:"bytes,15,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
}

func (x *StartTaskReq) Reset() {
	*x = StartTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTaskReq) ProtoMessage() {}

func (x *StartTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTaskReq.ProtoReflect.Descriptor instead.
func (*StartTaskReq) Descriptor() ([]byte, []int) {
	return file_adapter_grpc_proto_worker_worker_proto_rawDescGZIP(), []int{2}
}

func (x *StartTaskReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StartTaskReq) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *StartTaskReq) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *StartTaskReq) GetAlgorithmName() string {
	if x != nil {
		return x.AlgorithmName
	}
	return ""
}

func (x *StartTaskReq) GetAlgorithmVersion() string {
	if x != nil {
		return x.AlgorithmVersion
	}
	return ""
}

func (x *StartTaskReq) GetAlgorithmImageUrl() string {
	if x != nil {
		return x.AlgorithmImageUrl
	}
	return ""
}

func (x *StartTaskReq) GetAlgorithmSchema() string {
	if x != nil {
		return x.AlgorithmSchema
	}
	return ""
}

func (x *StartTaskReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *StartTaskReq) GetExecutorState() int64 {
	if x != nil {
		return x.ExecutorState
	}
	return 0
}

func (x *StartTaskReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *StartTaskReq) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *StartTaskReq) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *StartTaskReq) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *StartTaskReq) GetUtime() int64 {
	if x != nil {
		return x.Utime
	}
	return 0
}

func (x *StartTaskReq) GetAlgorithm() *Algorithm {
	if x != nil {
		return x.Algorithm
	}
	return nil
}

type StartTaskRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartTaskRsp) Reset() {
	*x = StartTaskRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTaskRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTaskRsp) ProtoMessage() {}

func (x *StartTaskRsp) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTaskRsp.ProtoReflect.Descriptor instead.
func (*StartTaskRsp) Descriptor() ([]byte, []int) {
	return file_adapter_grpc_proto_worker_worker_proto_rawDescGZIP(), []int{3}
}

type StopTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *StopTaskReq) Reset() {
	*x = StopTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTaskReq) ProtoMessage() {}

func (x *StopTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTaskReq.ProtoReflect.Descriptor instead.
func (*StopTaskReq) Descriptor() ([]byte, []int) {
	return file_adapter_grpc_proto_worker_worker_proto_rawDescGZIP(), []int{4}
}

func (x *StopTaskReq) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type StopTaskRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopTaskRsp) Reset() {
	*x = StopTaskRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTaskRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTaskRsp) ProtoMessage() {}

func (x *StopTaskRsp) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTaskRsp.ProtoReflect.Descriptor instead.
func (*StopTaskRsp) Descriptor() ([]byte, []int) {
	return file_adapter_grpc_proto_worker_worker_proto_rawDescGZIP(), []int{5}
}

type GetContainerStatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetContainerStatReq) Reset() {
	*x = GetContainerStatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContainerStatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerStatReq) ProtoMessage() {}

func (x *GetContainerStatReq) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerStatReq.ProtoReflect.Descriptor instead.
func (*GetContainerStatReq) Descriptor() ([]byte, []int) {
	return file_adapter_grpc_proto_worker_worker_proto_rawDescGZIP(), []int{6}
}

type GetContainerStatRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuPercent     float32              `protobuf:"fixed32,1,opt,name=cpu_percent,json=cpuPercent,proto3" json:"cpu_percent,omitempty"`
	MemoryUsage    uint64               `protobuf:"varint,2,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	MemoryMaxUsage uint64               `protobuf:"varint,3,opt,name=memory_max_usage,json=memoryMaxUsage,proto3" json:"memory_max_usage,omitempty"`
	ContainerState string               `protobuf:"bytes,4,opt,name=container_state,json=containerState,proto3" json:"container_state,omitempty"`
	GpuRsq         *ContainerGpuStatRsp `protobuf:"bytes,5,opt,name=gpu_rsq,json=gpuRsq,proto3" json:"gpu_rsq,omitempty"`
}

func (x *GetContainerStatRsp) Reset() {
	*x = GetContainerStatRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContainerStatRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerStatRsp) ProtoMessage() {}

func (x *GetContainerStatRsp) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerStatRsp.ProtoReflect.Descriptor instead.
func (*GetContainerStatRsp) Descriptor() ([]byte, []int) {
	return file_adapter_grpc_proto_worker_worker_proto_rawDescGZIP(), []int{7}
}

func (x *GetContainerStatRsp) GetCpuPercent() float32 {
	if x != nil {
		return x.CpuPercent
	}
	return 0
}

func (x *GetContainerStatRsp) GetMemoryUsage() uint64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *GetContainerStatRsp) GetMemoryMaxUsage() uint64 {
	if x != nil {
		return x.MemoryMaxUsage
	}
	return 0
}

func (x *GetContainerStatRsp) GetContainerState() string {
	if x != nil {
		return x.ContainerState
	}
	return ""
}

func (x *GetContainerStatRsp) GetGpuRsq() *ContainerGpuStatRsp {
	if x != nil {
		return x.GpuRsq
	}
	return nil
}

type ContainerStatRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvgCpuPercent   float32 `protobuf:"fixed32,1,opt,name=avg_cpu_percent,json=avgCpuPercent,proto3" json:"avg_cpu_percent,omitempty"`
	AvgMemoryUsage  uint64  `protobuf:"varint,2,opt,name=avg_memory_usage,json=avgMemoryUsage,proto3" json:"avg_memory_usage,omitempty"`
	PeakCpuPercent  float32 `protobuf:"fixed32,3,opt,name=peak_cpu_percent,json=peakCpuPercent,proto3" json:"peak_cpu_percent,omitempty"`
	PeakMemoryUsage uint64  `protobuf:"varint,4,opt,name=peak_memory_usage,json=peakMemoryUsage,proto3" json:"peak_memory_usage,omitempty"`
}

func (x *ContainerStatRsp) Reset() {
	*x = ContainerStatRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerStatRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerStatRsp) ProtoMessage() {}

func (x *ContainerStatRsp) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerStatRsp.ProtoReflect.Descriptor instead.
func (*ContainerStatRsp) Descriptor() ([]byte, []int) {
	return file_adapter_grpc_proto_worker_worker_proto_rawDescGZIP(), []int{8}
}

func (x *ContainerStatRsp) GetAvgCpuPercent() float32 {
	if x != nil {
		return x.AvgCpuPercent
	}
	return 0
}

func (x *ContainerStatRsp) GetAvgMemoryUsage() uint64 {
	if x != nil {
		return x.AvgMemoryUsage
	}
	return 0
}

func (x *ContainerStatRsp) GetPeakCpuPercent() float32 {
	if x != nil {
		return x.PeakCpuPercent
	}
	return 0
}

func (x *ContainerStatRsp) GetPeakMemoryUsage() uint64 {
	if x != nil {
		return x.PeakMemoryUsage
	}
	return 0
}

type ContainerGpuStatRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimpStamp    string     `protobuf:"bytes,1,opt,name=timp_stamp,json=timpStamp,proto3" json:"timp_stamp,omitempty"`
	CudaVersion  string     `protobuf:"bytes,2,opt,name=Cuda_version,json=CudaVersion,proto3" json:"Cuda_version,omitempty"`
	AttachedGpus string     `protobuf:"bytes,3,opt,name=Attached_gpus,json=AttachedGpus,proto3" json:"Attached_gpus,omitempty"`
	GpuInfo      []*GPUInfo `protobuf:"bytes,4,rep,name=gpu_info,json=gpuInfo,proto3" json:"gpu_info,omitempty"`
}

func (x *ContainerGpuStatRsp) Reset() {
	*x = ContainerGpuStatRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerGpuStatRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerGpuStatRsp) ProtoMessage() {}

func (x *ContainerGpuStatRsp) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerGpuStatRsp.ProtoReflect.Descriptor instead.
func (*ContainerGpuStatRsp) Descriptor() ([]byte, []int) {
	return file_adapter_grpc_proto_worker_worker_proto_rawDescGZIP(), []int{9}
}

func (x *ContainerGpuStatRsp) GetTimpStamp() string {
	if x != nil {
		return x.TimpStamp
	}
	return ""
}

func (x *ContainerGpuStatRsp) GetCudaVersion() string {
	if x != nil {
		return x.CudaVersion
	}
	return ""
}

func (x *ContainerGpuStatRsp) GetAttachedGpus() string {
	if x != nil {
		return x.AttachedGpus
	}
	return ""
}

func (x *ContainerGpuStatRsp) GetGpuInfo() []*GPUInfo {
	if x != nil {
		return x.GpuInfo
	}
	return nil
}

type GPUInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductName   string         `protobuf:"bytes,1,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	FbMemoryUsage *FBMemoryUsage `protobuf:"bytes,2,opt,name=fb_memory_usage,json=fbMemoryUsage,proto3" json:"fb_memory_usage,omitempty"`
	Utilization   *Utilization   `protobuf:"bytes,3,opt,name=utilization,proto3" json:"utilization,omitempty"`
}

func (x *GPUInfo) Reset() {
	*x = GPUInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPUInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPUInfo) ProtoMessage() {}

func (x *GPUInfo) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPUInfo.ProtoReflect.Descriptor instead.
func (*GPUInfo) Descriptor() ([]byte, []int) {
	return file_adapter_grpc_proto_worker_worker_proto_rawDescGZIP(), []int{10}
}

func (x *GPUInfo) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *GPUInfo) GetFbMemoryUsage() *FBMemoryUsage {
	if x != nil {
		return x.FbMemoryUsage
	}
	return nil
}

func (x *GPUInfo) GetUtilization() *Utilization {
	if x != nil {
		return x.Utilization
	}
	return nil
}

type FBMemoryUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    string `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
	Reserved string `protobuf:"bytes,2,opt,name=reserved,proto3" json:"reserved,omitempty"`
	Used     string `protobuf:"bytes,3,opt,name=used,proto3" json:"used,omitempty"`
	Free     string `protobuf:"bytes,4,opt,name=free,proto3" json:"free,omitempty"`
}

func (x *FBMemoryUsage) Reset() {
	*x = FBMemoryUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FBMemoryUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FBMemoryUsage) ProtoMessage() {}

func (x *FBMemoryUsage) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FBMemoryUsage.ProtoReflect.Descriptor instead.
func (*FBMemoryUsage) Descriptor() ([]byte, []int) {
	return file_adapter_grpc_proto_worker_worker_proto_rawDescGZIP(), []int{11}
}

func (x *FBMemoryUsage) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *FBMemoryUsage) GetReserved() string {
	if x != nil {
		return x.Reserved
	}
	return ""
}

func (x *FBMemoryUsage) GetUsed() string {
	if x != nil {
		return x.Used
	}
	return ""
}

func (x *FBMemoryUsage) GetFree() string {
	if x != nil {
		return x.Free
	}
	return ""
}

type Utilization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GpuUtil     string `protobuf:"bytes,1,opt,name=gpu_util,json=gpuUtil,proto3" json:"gpu_util,omitempty"`
	MemoryUtil  string `protobuf:"bytes,2,opt,name=memory_util,json=memoryUtil,proto3" json:"memory_util,omitempty"`
	EncoderUtil string `protobuf:"bytes,3,opt,name=encoder_util,json=encoderUtil,proto3" json:"encoder_util,omitempty"`
	DecoderUtil string `protobuf:"bytes,4,opt,name=decoder_util,json=decoderUtil,proto3" json:"decoder_util,omitempty"`
}

func (x *Utilization) Reset() {
	*x = Utilization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Utilization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Utilization) ProtoMessage() {}

func (x *Utilization) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_grpc_proto_worker_worker_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Utilization.ProtoReflect.Descriptor instead.
func (*Utilization) Descriptor() ([]byte, []int) {
	return file_adapter_grpc_proto_worker_worker_proto_rawDescGZIP(), []int{12}
}

func (x *Utilization) GetGpuUtil() string {
	if x != nil {
		return x.GpuUtil
	}
	return ""
}

func (x *Utilization) GetMemoryUtil() string {
	if x != nil {
		return x.MemoryUtil
	}
	return ""
}

func (x *Utilization) GetEncoderUtil() string {
	if x != nil {
		return x.EncoderUtil
	}
	return ""
}

func (x *Utilization) GetDecoderUtil() string {
	if x != nil {
		return x.DecoderUtil
	}
	return ""
}

var File_adapter_grpc_proto_worker_worker_proto protoreflect.FileDescriptor

var file_adapter_grpc_proto_worker_worker_proto_rawDesc = []byte{
	0x0a, 0x26, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2f, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x22, 0xd1, 0x01, 0x0a, 0x09, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x6c, 0x67, 0x6f, 0x72,
	0x69, 0x74, 0x68, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x67, 0x6f,
	0x72, 0x69, 0x74, 0x68, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70,
	0x61, 0x72, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x41,
	0x6c, 0x67, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x0b, 0x41, 0x6c, 0x67, 0x6f, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x22,
	0xe1, 0x03, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69,
	0x74, 0x68, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a,
	0x11, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69,
	0x74, 0x68, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74,
	0x68, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x75, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x75, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x41,
	0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69,
	0x74, 0x68, 0x6d, 0x22, 0x0e, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x73, 0x70, 0x22, 0x26, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x0d, 0x0a, 0x0b, 0x53,
	0x74, 0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x73, 0x70, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x22, 0xe2, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x70, 0x75,
	0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a,
	0x63, 0x70, 0x75, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4d,
	0x61, 0x78, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x34, 0x0a, 0x07, 0x67, 0x70, 0x75, 0x5f, 0x72, 0x73, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x47, 0x70, 0x75, 0x53, 0x74, 0x61, 0x74, 0x52, 0x73, 0x70, 0x52, 0x06,
	0x67, 0x70, 0x75, 0x52, 0x73, 0x71, 0x22, 0xba, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x61,
	0x76, 0x67, 0x5f, 0x63, 0x70, 0x75, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x61, 0x76, 0x67, 0x43, 0x70, 0x75, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x76, 0x67, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x61,
	0x76, 0x67, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x70, 0x65, 0x61, 0x6b, 0x5f, 0x63, 0x70, 0x75, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x70, 0x65, 0x61, 0x6b, 0x43, 0x70, 0x75,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x65, 0x61, 0x6b, 0x5f,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x70, 0x65, 0x61, 0x6b, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x47, 0x70, 0x75, 0x53, 0x74, 0x61, 0x74, 0x52, 0x73, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x69, 0x6d, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x70, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x43, 0x75,
	0x64, 0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x43, 0x75, 0x64, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x0d, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x67, 0x70, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x47, 0x70,
	0x75, 0x73, 0x12, 0x2a, 0x0a, 0x08, 0x67, 0x70, 0x75, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x50,
	0x55, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x67, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa2,
	0x01, 0x0a, 0x07, 0x47, 0x50, 0x55, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a,
	0x0f, 0x66, 0x62, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e,
	0x46, 0x42, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0d, 0x66,
	0x62, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x0b,
	0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x55, 0x74, 0x69, 0x6c, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x69, 0x0a, 0x0d, 0x46, 0x42, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72,
	0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x65, 0x65, 0x22, 0x8f,
	0x01, 0x0a, 0x0b, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x70, 0x75, 0x5f, 0x75, 0x74, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x70, 0x75, 0x55, 0x74, 0x69, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x5f, 0x75, 0x74, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x74, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x74, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x55, 0x74, 0x69, 0x6c, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x74, 0x69, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x55, 0x74, 0x69, 0x6c,
	0x32, 0xc5, 0x01, 0x0a, 0x06, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x09, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x14, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x14,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x13, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x53,
	0x74, 0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1b,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x73, 0x70, 0x42, 0x41, 0x5a, 0x3f, 0x68, 0x61, 0x6e, 0x67,
	0x6c, 0x6f, 0x6b, 0x2d, 0x74, 0x65, 0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x64, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x3b, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_adapter_grpc_proto_worker_worker_proto_rawDescOnce sync.Once
	file_adapter_grpc_proto_worker_worker_proto_rawDescData = file_adapter_grpc_proto_worker_worker_proto_rawDesc
)

func file_adapter_grpc_proto_worker_worker_proto_rawDescGZIP() []byte {
	file_adapter_grpc_proto_worker_worker_proto_rawDescOnce.Do(func() {
		file_adapter_grpc_proto_worker_worker_proto_rawDescData = protoimpl.X.CompressGZIP(file_adapter_grpc_proto_worker_worker_proto_rawDescData)
	})
	return file_adapter_grpc_proto_worker_worker_proto_rawDescData
}

var file_adapter_grpc_proto_worker_worker_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_adapter_grpc_proto_worker_worker_proto_goTypes = []interface{}{
	(*Algorithm)(nil),           // 0: worker.Algorithm
	(*AlgoVersion)(nil),         // 1: worker.AlgoVersion
	(*StartTaskReq)(nil),        // 2: worker.StartTaskReq
	(*StartTaskRsp)(nil),        // 3: worker.StartTaskRsp
	(*StopTaskReq)(nil),         // 4: worker.StopTaskReq
	(*StopTaskRsp)(nil),         // 5: worker.StopTaskRsp
	(*GetContainerStatReq)(nil), // 6: worker.GetContainerStatReq
	(*GetContainerStatRsp)(nil), // 7: worker.GetContainerStatRsp
	(*ContainerStatRsp)(nil),    // 8: worker.ContainerStatRsp
	(*ContainerGpuStatRsp)(nil), // 9: worker.ContainerGpuStatRsp
	(*GPUInfo)(nil),             // 10: worker.GPUInfo
	(*FBMemoryUsage)(nil),       // 11: worker.FBMemoryUsage
	(*Utilization)(nil),         // 12: worker.Utilization
}
var file_adapter_grpc_proto_worker_worker_proto_depIdxs = []int32{
	1,  // 0: worker.Algorithm.versions:type_name -> worker.AlgoVersion
	0,  // 1: worker.StartTaskReq.algorithm:type_name -> worker.Algorithm
	9,  // 2: worker.GetContainerStatRsp.gpu_rsq:type_name -> worker.ContainerGpuStatRsp
	10, // 3: worker.ContainerGpuStatRsp.gpu_info:type_name -> worker.GPUInfo
	11, // 4: worker.GPUInfo.fb_memory_usage:type_name -> worker.FBMemoryUsage
	12, // 5: worker.GPUInfo.utilization:type_name -> worker.Utilization
	2,  // 6: worker.Worker.StartTask:input_type -> worker.StartTaskReq
	4,  // 7: worker.Worker.StopTask:input_type -> worker.StopTaskReq
	6,  // 8: worker.Worker.GetContainerStat:input_type -> worker.GetContainerStatReq
	3,  // 9: worker.Worker.StartTask:output_type -> worker.StartTaskRsp
	5,  // 10: worker.Worker.StopTask:output_type -> worker.StopTaskRsp
	7,  // 11: worker.Worker.GetContainerStat:output_type -> worker.GetContainerStatRsp
	9,  // [9:12] is the sub-list for method output_type
	6,  // [6:9] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_adapter_grpc_proto_worker_worker_proto_init() }
func file_adapter_grpc_proto_worker_worker_proto_init() {
	if File_adapter_grpc_proto_worker_worker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_adapter_grpc_proto_worker_worker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_grpc_proto_worker_worker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlgoVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_grpc_proto_worker_worker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_grpc_proto_worker_worker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTaskRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_grpc_proto_worker_worker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_grpc_proto_worker_worker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTaskRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_grpc_proto_worker_worker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContainerStatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_grpc_proto_worker_worker_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContainerStatRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_grpc_proto_worker_worker_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerStatRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_grpc_proto_worker_worker_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerGpuStatRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_grpc_proto_worker_worker_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GPUInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_grpc_proto_worker_worker_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FBMemoryUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_grpc_proto_worker_worker_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Utilization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_adapter_grpc_proto_worker_worker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_adapter_grpc_proto_worker_worker_proto_goTypes,
		DependencyIndexes: file_adapter_grpc_proto_worker_worker_proto_depIdxs,
		MessageInfos:      file_adapter_grpc_proto_worker_worker_proto_msgTypes,
	}.Build()
	File_adapter_grpc_proto_worker_worker_proto = out.File
	file_adapter_grpc_proto_worker_worker_proto_rawDesc = nil
	file_adapter_grpc_proto_worker_worker_proto_goTypes = nil
	file_adapter_grpc_proto_worker_worker_proto_depIdxs = nil
}
