syntax = "proto3";
// 包名
package scheduler;
// 生成的go文件位置及其包名
option go_package = "./adapter/grpc/proto/scheduler;scheduler";


message Algorithm {
    string name = 1;
    int64 type = 2;
    int64 part = 3;
    string version = 4;
    string path = 5;
    string schema = 6;
}

message TaskInfo {
    int64 id = 1;
    string task_id = 2;
    string worker_id = 3;
    Algorithm algorithm = 4;
    int64 status = 5;
    int64 executor_state = 6;
    string desc = 7;
    string input = 8;
    string output = 9;
    int64 ctime = 10;
    int64 utime = 11;
}

message SysStatus {
    float cpu = 1;
    float memory = 2;
    int64 cpu_core = 3;
    int64 memory_size = 4;
}

message WorkerInfo {
    string id = 1;
    string name = 2;
    string host = 3;
    int64 port = 4;
    int64 status = 5;
    int64 ctime = 6;
    int64 utime = 7;
    TaskInfo running_task = 8;
    SysStatus sys_status = 9;
}

message ListWorkerReq {}
message ListWorkerRsp {
    repeated WorkerInfo workers = 1;
}

message RegistetWorkerReq{
    WorkerInfo worker = 1;
}
message RegistetWorkerRsp{}

message StartTaskReq {
    string params = 1;
    Algorithm algorithm = 2;
}
message StartTaskRsp {
    string task_id = 1;
}

message StopTaskReq {
    string task_id = 1;
}
message StopTaskRsp {}

message GetTaskReq {
    string task_id = 1;
}
message GetTaskRsp {
    TaskInfo task = 1;
}

message ListTaskReq{}
message ListTaskRsp{
    repeated TaskInfo tasks = 1;
}

message SetTaskResultReq {
    string task_id = 1;
    string reusult = 2;
    int64 state = 3;
    string desc = 4;
}
message SetTaskResultRsp {}

//通过TaskId请求
message SubscribeTaskResultReq {
    string task_id = 1;
}
//返回订阅任务的信息
message SubscribeTaskResultRsp {
    TaskInfo task = 1;
}

service Scheduler{
    rpc ListWorkers(ListWorkerReq) returns (ListWorkerRsp);
    rpc RegistetWorker(RegistetWorkerReq) returns (RegistetWorkerRsp);
    rpc StartTask(StartTaskReq) returns (StartTaskRsp);
    rpc StopTask(StopTaskReq) returns (StopTaskRsp);
    rpc GetTask(GetTaskReq) returns (GetTaskRsp);
    rpc ListTask(ListTaskReq) returns (ListTaskRsp);
    rpc SetTaskResult(SetTaskResultReq) returns (SetTaskResultRsp);
    rpc SubscribeTaskResult(SubscribeTaskResultReq) returns (stream SubscribeTaskResultRsp);//TODO 服务端流
}